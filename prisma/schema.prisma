// Prisma schema file,

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

model Team {
  id        String    @id @default(cuid())
  name      String
  pokemon   Pokemon[]
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")

  @@map(name: "teams")
}

model Pokemon {
  id             String    @id @default(cuid())
  name           String
  baseExperience Int
  types          Type[] @relation("PokemonTypes")
  abilities      Ability[] @relation("PokemonAbilities")
  sprite         String
  team           Team      @relation(fields: [teamId], references: [id])
  teamId         String

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "pokemons")
}

model Ability {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  pokemon   Pokemon[] @relation("PokemonAbilities")

  @@map(name: "abilities")
}

model Type {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  pokemon   Pokemon[] @relation("PokemonTypes")

  @@map(name: "types")
}

model Cache {
  id        String   @id @unique
  value     Json
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "cache")
}
